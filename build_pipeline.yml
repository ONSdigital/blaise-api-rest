---
trigger: none

pool:
  vmImage: windows-latest

variables:
  solutionPath: '**/*.sln'
  buildPlatform: x64
  buildConfiguration: Release

stages:
  - stage: BuildRestApi
    displayName: Build REST API
    jobs:
      - job: build
        steps:
          - task: DotNetCoreCLI@2
            displayName: Run NuGet restore
            inputs:
              command: restore
              projects: $(solutionPath)
              feedsToUse: select
              vstsFeed: fbaf94f7-2d40-410a-8a27-de142d8d2313/2d8c792e-c1ad-4a66-924d-5bc4fec5fca0
              clean: true

          - task: UseDotNet@2
            inputs:
              packageType: sdk
              version: 8.x

          - task: PowerShell@2
            displayName: Check code formatting
            inputs:
              targetType: inline
              errorActionPreference: continue
              script: |
                cd "$(Build.SourcesDirectory)"
                dotnet format Blaise.Api.Rest.sln --verify-no-changes --no-restore --verbosity diagnostic
                if ($LASTEXITCODE -eq 0) {
                  Write-Host '✅ Check code formatting found no issues.'
                } elseif ($LASTEXITCODE -eq 2) {
                  Write-Host '⚠️ Check code formatting found warnings.'
                  exit 0
                } else {
                  Write-Host '❌ Check code formatting failed.'
                  exit 1
                }

          - task: VSBuild@1
            displayName: Build solution
            inputs:
              solution: $(solutionPath)
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)
              vsVersion: latest
              restore: false

          - task: VSTest@2
            displayName: Run unit tests
            inputs:
              testSelector: testAssemblies
              testAssemblyVer2: |
                **\*test*.dll
                !**\*Behaviour.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: $(System.DefaultWorkingDirectory)

          - task: CopyFiles@2
            displayName: Copy artifact
            inputs:
              SourceFolder: $(System.DefaultWorkingDirectory)
              Contents: '**\bin\$(BuildConfiguration)\**'
              TargetFolder: $(build.ArtifactStagingDirectory)
              CleanTargetFolder: true
              OverWrite: true

          - task: PublishBuildArtifacts@1
            displayName: Publish artifact
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: _BlaiseRestApi
              publishLocation: Container
