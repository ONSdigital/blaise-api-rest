---
trigger: none
pool:
  vmImage: windows-2019
variables:
  solutionPath: '**/*.sln'
  buildPlatform: Any CPU
  buildConfiguration: Release
stages:
  - stage: BuildRestApi
    displayName: Build REST API
    jobs:
      - job: build
        steps:
          - task: NuGetToolInstaller@1
            displayName: Install NuGet
          - task: NuGetCommand@2
            displayName: Run NuGet restore
            inputs:
              command: restore
              restoreSolution: $(solutionPath)
              feedsToUse: select
              vstsFeed: fbaf94f7-2d40-410a-8a27-de142d8d2313/2d8c792e-c1ad-4a66-924d-5bc4fec5fca0
          - task: VSBuild@1
            displayName: Build solution
            inputs:
              solution: $(solutionPath)
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)
          - task: VSTest@2
            displayName: Run unit tests
            inputs:
              testSelector: testAssemblies
              testAssemblyVer2: |
                **\*test*.dll
                !**\*Behaviour.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: $(System.DefaultWorkingDirectory)
          - task: CopyFiles@2
            displayName: Copy artifact
            inputs:
              SourceFolder: $(System.DefaultWorkingDirectory)
              Contents: '**\bin\$(BuildConfiguration)\**'
              TargetFolder: $(build.artifactstagingdirectory)
              CleanTargetFolder: true
              OverWrite: true
          - task: PublishBuildArtifacts@1
            displayName: Publish artifact
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: _BlaiseRestApi
              publishLocation: Container
          - task: UseDotNet@2
            inputs:
               packageType: 'sdk'
               version: '8.0.408'  # Stable LTS
               
          - script: dotnet --list-sdks
            displayName: Check .NET SDK version
           
          - script: dotnet --list-runtimes
            displayName: Check .NET runtime versions
           
          - script: dotnet format --version
            displayName: Confirm dotnet-format version
           
          - task: PowerShell@2
            displayName: Check code formatting with dotnet-format
            inputs:
              targetType: inline
              script: |
                cd "$(Build.SourcesDirectory)"
                dotnet format Blaise.Nuget.Api.sln --verify-no-changes --no-restore --verbosity diagnostic
                if ($LASTEXITCODE -ne 0) {
                  Write-Host "Code formatting issues found. Run 'dotnet format' locally to fix them."
                  exit 1
                }

